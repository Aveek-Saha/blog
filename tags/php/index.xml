<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>PHP on Aveek's Blog</title><link>https://home.aveek.io/blog/tags/php/</link><description>Recent content in PHP on Aveek's Blog</description><generator>Hugo -- gohugo.io</generator><managingEditor>aveek.s98@gmail.com (Aveek Saha)</managingEditor><webMaster>aveek.s98@gmail.com (Aveek Saha)</webMaster><lastBuildDate>Sun, 22 Jul 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://home.aveek.io/blog/tags/php/index.xml" rel="self" type="application/rss+xml"/><item><title>E-commerce Website Template</title><link>https://home.aveek.io/blog/post/ecommerce-website-template/</link><pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate><author>aveek.s98@gmail.com (Aveek Saha)</author><guid>https://home.aveek.io/blog/post/ecommerce-website-template/</guid><description>&lt;p>If you want the code for this project, fork this GitHub repo - &lt;a href="https://github.com/Aveek-Saha/ecommerce-website-template">&lt;code>E-commerce template&lt;/code>&lt;/a> &lt;!-- raw HTML omitted -->
If you want to see a live demo, check this out - &lt;a href="http://eshop.byethost22.com/">&lt;code>Demo&lt;/code>&lt;/a>&lt;/p>
&lt;h1 id="introduction">Introduction&lt;/h1>
&lt;p>A common thing that most of us on the internet have done, is shop online. The idea of spending your hard earned money online is as addictive and dopamine inducing to those that enjoy the same thing in a mall. This project is an attempt to create a template for a simple e-commerce site, without any payment capability.&lt;/p>
&lt;p>On loading the site, you can either login with an existing account or create a new one. Account details are stored in a SQL database, and passwords are hashed for security.&lt;/p>
&lt;h1 id="logging-in-as-a-user">Logging in as a User&lt;/h1>
&lt;p>Once logged in, you’ll be able to see all product listings along with the price of the product and a button to add the product to your cart. If you click on a product, It’ll take you to a Product detail page, displaying more information like a full product description and a list of dealers.&lt;/p>
&lt;p>On the nav bar, you can check how many items are in your cart, clicking on it will take you to a page with the breakdown of the current bill, you can remove items from here by deleting them, or you can change the quantity of any item in the cart. This page Displays your account details like, Name, address and phone number. you can proceed to checkout from here and place your order, this order is stored in an SQL database. Currently there is no way for a user to view the orders he’s already placed.&lt;/p>
&lt;p>There is also a messaging facility available, and you can enter the email of the user you want to message, and send messages back and forth from that user.&lt;/p>
&lt;h1 id="logging-in-as-an-admin">Logging in as an Admin&lt;/h1>
&lt;p>If you are logged in as an admin, you will have the option to create new products, and add their details.&lt;/p>
&lt;!-- raw HTML omitted --></description></item><item><title>Word Suggestion App</title><link>https://home.aveek.io/blog/post/word-suggestion-app/</link><pubDate>Sun, 04 Mar 2018 00:00:00 +0000</pubDate><author>aveek.s98@gmail.com (Aveek Saha)</author><guid>https://home.aveek.io/blog/post/word-suggestion-app/</guid><description>&lt;p>We often find ourselves grasping at a word that’s on the tip of our tongue but we just can’t pin it down, or wanting to check the spelling of a word that we’re not sure of.&lt;/p>
&lt;p>Since this is such a common problem, I decided to use My front end knowledge and data structures to come up with a solution. This project has 2 parts.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;h1 id="the-c-part">The C part:&lt;/h1>
&lt;p>I made a C program that uses a list of words, to build a trie, which is a kind of search tree. When this program runs, and an input word is given, it displays a list of words that are close or similar to it.
There is also a spell check mode that will display if a word is correctly spelled or not. This program also creates a text file of the most frequently spelt incorrect words. Once this was done, I moved on the the front end part.&lt;/p>
&lt;h1 id="the-web-interface">The web interface:&lt;/h1>
&lt;p>Using php’s exec function I piped the output of this program to a PHP array. This PHP file is then asynchronously called when the user presses “alt +h”. Then I added some CSS to make the whole thing look nice.&lt;/p>
&lt;h1 id="the-final-features-features-include">The final features features include:&lt;/h1>
&lt;p>Two modes of operation that can be toggled-
A word suggestion mode- Where the user can type in a partially completed word and the app will suggest predictions.
A spell check mode- Where the user can enter a word and check if the spelling is correct, if it is not the app also suggests words that may contain the correct spelling of the word that the user was trying to type.
The app keeps a track of the the 5 most frequently misspelt words
The word of the day (the most frequently incorrectly spelt word) can be seen from the spelling.php page
I used an Apache server to host this application.&lt;/p>
&lt;p>If you want the code for this project, fork this Github repo - &lt;a href="https://github.com/Aveek-Saha/Autocorrect-and-spellcheck-webapp">https://github.com/Aveek-Saha/Autocorrect-and-spellcheck-webapp&lt;/a> &lt;!-- raw HTML omitted -->
If you want to see a live demo, check this out – &lt;a href="https://autocorrect-and-spellcheck.herokuapp.com/">https://autocorrect-and-spellcheck.herokuapp.com/&lt;/a>
Note: For the live demo I’m taking the input directly from the word list in php by storing the txt file in an array, this is because the ‘exec’ function does not work on the server.&lt;/p>
&lt;!-- raw HTML omitted --></description></item></channel></rss>